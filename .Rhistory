library("swirl")
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
submit()
submit()
submit()
boring_function('My first function!')
boring_function
submit
function(my_vector)
)
my_mean(c(1,2, 3))
my_mean
submit()
my_mean(c(4, 5, 10))
submit()
submit()
submit
submit()
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
evaluate(1.4, 3.6, 7.9, 8.8)
evaluate(c(1.4, 3.6, 7.0, 8.8))
evaluate(func, c(1.4, 3.6, 7.0, 8.8))
evaluate(c(1.4, 3.6, 7.0, 8.8),)
evaluate(sd, c(1.4, 3.6, 7.0, 8.8),)
evaluate(sd, c(1.4, 3.6, 7.0, 8.8))
evaluate(sd(), c(1.4, 3.6, 7.0, 8.8))
evaluate(sd(dat), c(1.4, 3.6, 7.0, 8.8))
evaluate(sd(c(1.4, 3.6, 7.0, 8.8)))
evaluate
evaluate(sd(c(1.4, 3.6, 7.0, 8.8), dat))
info()
evaluate()
evaluate(sd(func), c(1.4, 3.6, 7.9, 8.8))
evaluate(sd(dat),c(1.4, 3.6. 7.9, 8.8))
evaluate(sd(dat),c(1.4, 3.6, 7.9, 8.8))
evaluate(sd(dat), dat=c(1.4, 3.6, 7.9, 8.8))
evaluate(func)
evaluate(sd(c(1.4, 3.6, 7.9, 8.8)))
evaluate(sd(), c(1.4, 3.6, 7.9, 8.8))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x}, c(8, 4, 0))
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[3]}, c(8, 4, 0))
evaluate(function(x){x[3]} length=3, c(8, 4, 0))
evaluate(function(x){x[3] length(3)}, c(8, 4, 0))
evaluate(function(x, length(3)){x[3]}, c(8, 4, 0))
evaluate(function(x){x[3], c(8, 4, 0)})
evaluate(function(x){x[3]}, c(8, 4, 0))
evaluate(function(x){x[3], length(3)}, c(8, 4, 0))
evaluate(function(x){x[3] length(3)}, c(8, 4, 0))
evaluate(function(x, length(3)){x[3]}, c(8, 4, 0))
evaluate(function(x, length(3){x[3]}, c(8, 4, 0))
evaluate(function(x){x[3]}, c(8, 4, 0) length(3))
bye()
swirl()
evaluate(function(x){x[3]}, c(8, 4, 0))
bye()
library("swirl")
swirl()
evaluate(function(x){x[3]}, c(8, 4, 0))
evaluate(function(x){length(dat), x[3]}, c(8, 4, 0))
evaluate(function(x){length(3) x[3]}, c(8, 4, 0))
evaluate(function(x, length=3){x[3]}, c(8, 4, 0))
evaluate(function(x, length(3)){x[3]}, c(8, 4, 0))
evaluate(function(x,length=3){x[3]}, c(8,4,0))
info()
skip()
?paste
paste("Programming", "is", "fun!")
submit()
submit()
submit()
submit()
submit()
telegram("good morning")
submit()
skip()
submit()
submit
submit()
submit
submit()
info()
skip()
submit()
submit()
submt()
submit()
submit()
submit()
mad_libs("colorado", "blue", "elephant")
submit()
submit()
submit()
submit()
bye()
library("swirl")
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
bye()
swirl()
submit()
submit
submit()
submit()
submit()
submit()
submit()
skip()
info()
skip()
submit()
submit()
?binary operator
?binaryoperator
??binaryoperator
??binary operator
submit()
help
skip()
skip()
'Good' %p% 'job!'
submit()
'I' %p% 'love' %p% 'R!'
bye()
cube ,- function(x, n){}
cube <- function(x, n){x^3}
cube(3)
x <- 1:10
if(x>5){ x <- 0}
f <- function(x){}
f <- function(x){  g <- function(y) {
y+z
}
z <- 4
x+g(x)
}
f <- function(x){
g<- function(y) {}
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
getwd()
setwd(C:/Users/Misty/Documents/Coursera/r-programming/specdata)
getwd()
setwd(c:users/Misty/Documents/Coursera/r-programming/specdata)
setwd(c:/users/Misty/Documents/Coursera/r-programming/specdata)
setwd(C:/Users/Misty/Documents/Coursera/r-programming/specdata)
setwd(c:/Users/Misty/Documents/Cousera/r-programming)
?setwd()
dataset_url <- "htp://s3.amazonaws.com/practice_assignment/diet_data.zip"
download.file(dataset_url, "diet_data.zip")
dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip"
download.file(dataset_url, "diet_data.zip")
unzip("diet_data.zip", exdir = "diet_data")
list.file("diet_data")
list.files("diet_data")
andy <- read.csv("diet_data/Andy.csv")
head(andy)
length(andy$Day)
dim(andy)
str(andy)
summary(andy)
andy[1, "Weight"]
andy[30, "Weight"]
andy[which(andy$Day==30), "Weight"]
subset(and$Weight, andy$Day==30)
subset(andy$Weight, andy$Day==30)
andyJstart <- andy[1, "Weight"]
andy_start <- andy[1, "Weight"]
andy_end <- andy[30, "Weight"]
andy_loss <- andy_start - andy_end
andy_loss
files <- list.files("diet_data")
files
files[1]
files[2]
files[3:5]
head(read.csv(files[3]))
files_full <- list.files("diet_data", full.names = TRUE)
files_full
head(read.csv(files_full[3]))
andy_david <- rbind(andy, read.csv(files_full[2]))
head(andy_david)
tail(andy_david)
day_25 <- andy_david[which(andy_david$Day==25),]
day_25
for (i in 1:5) {print(i)}
for (i in 1:5){
dat <- rbind(dat, read.csv(files_full[i]))
}
dat <- data.frame()
for (i in 1:5){
dat <- rbind(dat, read.csv(files_full[i]))
}
str(dat)
for(i in 1:5) {
dat2 <- data.frame()
}
for(i in 1:5) {
dat2 <- data.frame()
dat2 <- rbind(dat2, read.csv(files_full[i]))
}
str(dat2)
head(dat2)
median(dat$Weight)
dat
median(dat$Weight, na.rm=TRUE)
dat_30 <- dat[which(dat[,"Day"]==30), ]
dat_30
median(dat_30$Weight)
weightmedian <- function(directory, day) {
files_list <- list.files(directory, full.names = TRUE)
dat <- data.frames()
for (i in 1:5){
dat <- rbind(dat, read.csv(files_list[i]))
}
dat_subset <- dat[which(dat[, "Day"]==day),]
median(dat_subset[,"Weight"], na.rm= TRUE)
}
weightmedian(directory="diet_data", day=20)
weightmedian <- function(directory, day) {
files_list <- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in 1:5){
dat <- rbind(dat, read.csv(files_list[i]))
}
dat_subset <- dat[which(dat[, "Day"]==day),]
median(dat_subset[,"Weight"], na.rm= TRUE)
}
weightmedian(directory="diet_data", day=20)
weightmedian("diet_data", 4)
weightmedian("diet_data", 17)
summary(files_full)
tmp <- vector(mode = "list", length= length(files_full))
summary(tmp)
for (i in seq_along(files_full)){
tmp[[i]] <- read.csv(files_full[[i]])
}
str(tmp)
str(lapply(files_full, read.csv))
output <- do.call(rbind, tmp)
str(output)
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
bye()
getwd()
setwd("C:/Users/Misty/Documents/Coursera/r-programming")
list.files
list.files()
fullfiles
getwd()
setwd("C:/Users/Misty/Documents/Coursera/r-programming/ProgrammingAssignment2")
list.files()
source("cachematrix.R")
test=function(mat){
temp = makeCacheMatrix(mat)
}
source("testcachemat.R")
set.seed(1110201)
r=rnorm(1000000)
mat1 = matrix(r, nrow=1000, ncol=1000)
test(mat1)
source("cachematrix.R")
